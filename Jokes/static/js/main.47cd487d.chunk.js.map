{"version":3,"sources":["components/menu/index.js","components/menu/menu.js","components/button/index.js","components/button/button.js","components/icon/index.js","components/icon/icon.js","components/joke/joke.js","components/joke/index.js","components/joke-list/joke-list.js","components/joke-list/index.js","components/saved-joke/index.js","components/saved-joke/saved-joke.js","components/saved-jokes/index.js","components/saved-jokes/saved-jokes.js","components/loader/index.js","components/loader/loader.js","service/index.js","service/API.js","components/jokes/jokes.js","components/jokes/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["Menu","currentStatus","sorting","changeStatus","refresh","className","type","disabled","onClick","Button","text","Icon","iconClass","smileColors","renderArrowButton","clickFunction","sign","buttonClass","icon","renderButtonIcon","Joke","currentSmile","isSaved","saveJoke","decreaseRaiting","raiting","increaseRaiting","textClass","borderColor","style","createList","data","jokes","map","joke","key","id","createJokeItem","JokeList","props","SavedJoke","SavedJokes","lists","Loader","ApiJokes","this","_cursProxy","_url","_fetchSetup","method","body","headers","accept","init","fetch","result","json","_maxPages","total_pages","min","max","randomPage","Math","floor","random","results","prepareData","smiles","vote","class","color","Jokes","state","loading","_className","api","API","bind","sort","rating","idx","findIndex","smile","getFunctions","get","then","setJokes","currentID","setState","filter","getIndex","element","insert","sortJokes","a","b","updatedRating","updateRating","index","slice","changeCurrentSmile","status","jokePage","getSavedJokes","component","renderComponent","Component","App","showCurrent","getRefFunctions","first","second","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47cd487d.chunk.js","sourcesContent":["import Menu from './menu';\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\n\r\nimport './menu.scss';\r\n\r\nconst Menu = ({\r\n  currentStatus, sorting, changeStatus, refresh,\r\n}) => (\r\n  <div className=\"menu\">\r\n    <div className=\"menu__actions\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"menu__button\"\r\n        disabled={!currentStatus}\r\n        onClick={() => refresh()}\r\n      >\r\n        New jokes\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"menu__button\"\r\n        disabled={!currentStatus}\r\n        onClick={() => sorting()}\r\n      >\r\n        Sort\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"menu__button\"\r\n        onClick={() => changeStatus()}\r\n      >\r\n        {currentStatus ? 'Show saved jokes' : 'Back'}\r\n      </button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Menu;\r\n","import Button from './button';\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nconst Button = ({\r\n  className, onClick, disabled, text,\r\n}) => (\r\n  <button\r\n    type=\"button\"\r\n    className={className}\r\n    onClick={onClick}\r\n    disabled={disabled}\r\n  >\r\n    {text}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import Icon from './icon';\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\n\r\n\r\nconst Icon = ({ iconClass }) => <i className={iconClass} />;\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\n\r\nimport Button from '../button';\r\nimport Icon from '../icon';\r\n\r\nimport './joke.scss';\r\n\r\n// структура для хранения классов для смайликов в завимости от их оценки.\r\nconst smileColors = {\r\n  'em-face_with_raised_eyebrow': 'rgb(0, 0, 0',\r\n  'em-full_moon_with_face': 'rgb(0, 46, 0)',\r\n  'em-face_with_hand_over_mouth': 'rgb(0, 92, 0)',\r\n  'em-laughing': 'rgb(0, 148, 0)',\r\n  'em-joy': 'rgb(0, 192, 0)',\r\n  'em-rolling_on_the_floor_laughing': 'rgb(0, 255, 0)',\r\n  'em-disappointed': 'rgb(46, 0, 0)',\r\n  'em-angry': 'rgb(92, 0, 0)',\r\n  'em-triumph': 'rgb(148, 0, 0)',\r\n  'em-rage': 'rgb(192, 0, 0)',\r\n  'em-face_with_symbols_on_mouth': 'rgb(255, 0, 0)',\r\n};\r\n\r\n\r\nconst renderButtonIcon = (iconClass) => (\r\n  <Icon\r\n    iconClass={iconClass}\r\n  />\r\n);\r\n\r\nconst renderArrowButton = (clickFunction, sign) => {\r\n  const buttonClass = `joke__button joke__button--${sign}`;\r\n  const iconClass = `fas fa-arrow-${sign}`;\r\n  const icon = renderButtonIcon(iconClass);\r\n  return (\r\n    <Button\r\n      className={buttonClass}\r\n      onClick={() => clickFunction()}\r\n      text={icon}\r\n    />\r\n  );\r\n};\r\n\r\nconst Joke = ({\r\n  currentSmile, isSaved, saveJoke, decreaseRaiting, raiting, increaseRaiting, text,\r\n}) => {\r\n  const iconClass = `em ${currentSmile}`;\r\n  const textClass = {\r\n    borderColor: smileColors[currentSmile],\r\n  };\r\n  const buttonClass = isSaved ? 'joke__status joke__status--saved' : 'joke__status';\r\n  return (\r\n    <li className=\"joke\">\r\n      <div className=\"joke__actions\">\r\n        <Button\r\n          className={buttonClass}\r\n          onClick={() => saveJoke()}\r\n          text={isSaved ? <span className=\"joke__checkmark\" /> : 'Save'}\r\n        />\r\n        <div className=\"joke__rating\">\r\n          {renderArrowButton(decreaseRaiting, 'down')}\r\n          <p className=\"joke__test\" style={textClass}>\r\n            <span className=\"joke__votes\">{raiting}</span>\r\n          </p>\r\n          {renderArrowButton(increaseRaiting, 'up')}\r\n        </div>\r\n      </div>\r\n      <p className=\"joke__text\">{text}</p>\r\n      <div className=\"joke__smile\">\r\n        <Icon iconClass={iconClass} />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Joke;\r\n","import Joke from './joke';\r\n\r\nexport default Joke;\r\n","import React from 'react';\r\n\r\nimport Joke from '../joke';\r\n\r\nimport './joke-list.scss';\r\n\r\nconst createJokeItem = (joke, increaseRaiting, decreaseRaiting, saveJoke) => (\r\n  <Joke\r\n    key={joke.id}\r\n    text={joke.text}\r\n    id={joke.id}\r\n    isSaved={joke.isSaved}\r\n    raiting={joke.raiting}\r\n    saveJoke={() => saveJoke(joke.id)}\r\n    currentSmile={joke.currentSmile}\r\n    increaseRaiting={() => increaseRaiting(joke.id)}\r\n    decreaseRaiting={() => decreaseRaiting(joke.id)}\r\n  />\r\n);\r\n\r\n// создаём лист шуток по полученным с сервера.\r\nconst createList = (data) => data.jokes.map((joke) => createJokeItem(\r\n  joke, data.increaseRaiting, data.decreaseRaiting, data.saveJoke,\r\n));\r\n\r\n\r\nconst JokeList = (props) => {\r\n  const jokes = createList(props);\r\n  return (\r\n    <ul className=\"joke-list\">\r\n      {jokes}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default JokeList;\r\n","import JokeList from './joke-list';\r\n\r\nexport default JokeList;\r\n","import SavedJoke from './saved-joke';\r\n\r\nexport default SavedJoke;\r\n","import React from 'react';\r\n\r\n\r\nimport './saved-joke.scss';\r\n\r\nconst SavedJoke = ({ id, text }) => (\r\n  <li className=\"saved-joke\" id={id}>\r\n    <p className=\"save-joke__text\">{text}</p>\r\n  </li>\r\n);\r\n\r\nexport default SavedJoke;\r\n","import SavedJokes from './saved-jokes';\r\n\r\nexport default SavedJokes;\r\n","import React from 'react';\r\n\r\nimport SavedJoke from '../saved-joke';\r\n\r\n\r\nimport './saved-jokes.scss';\r\n\r\nconst createList = (data) => data.jokes.map((joke) => (\r\n  <SavedJoke\r\n    key={joke.id}\r\n    id={joke.id}\r\n    text={joke.text}\r\n  />\r\n));\r\n\r\n\r\nconst SavedJokes = (props) => {\r\n  const lists = createList(props);\r\n  return (\r\n    <ul className=\"saved-jokes\">\r\n      {lists}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SavedJokes;\r\n","import Loader from './loader';\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\n\r\n\r\nimport './loader.scss';\r\n\r\nconst Loader = () => (\r\n  <div className=\"loading\">\r\n    <div className=\"loading__spinner\">\r\n      <i className=\"far fa-8x fa-laugh fa-spin loading__spinner\" />\r\n    </div>\r\n    <p className=\"loading__text\">Loading...</p>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import ApiJokes from './API';\r\n\r\nexport default ApiJokes;\r\n","const getRandomNumber = (min, max) => Math.floor(min + Math.random() * (max + 1 - min));\r\n\r\nexport default class ApiJokes {\r\n  constructor() {\r\n    // сайт для обхода CORS\r\n    this._cursProxy = 'https://cors-anywhere.herokuapp.com/';\r\n    this._url = `${this._cursProxy}https://icanhazdadjoke.com`;\r\n    // настройка fetch\r\n    this._fetchSetup = {\r\n      method: 'GET',\r\n      body: null,\r\n      headers: { accept: 'Accept: application/json' },\r\n    };\r\n\r\n    this.init();\r\n  }\r\n\r\n  // переводим полученные данные в формат для отображения.\r\n  static prepareData(joke) {\r\n    return {\r\n      id: joke.id,\r\n      text: joke.joke,\r\n      raiting: 0,\r\n      isSaved: false,\r\n      currentSmile: 'em-face_with_raised_eyebrow',\r\n    };\r\n  }\r\n\r\n  async init() {\r\n    const result = await fetch(`${this._url}/search`, this._fetchSetup);\r\n    const body = await result.json();\r\n    this._maxPages = body.total_pages;\r\n  }\r\n\r\n  async get() {\r\n    // получаем случайную страницу из доступных в API\r\n    const randomPage = getRandomNumber(1, this._maxPages);\r\n    const result = await (fetch(`${this._url}/search?page=${randomPage}`, this._fetchSetup));\r\n    const body = await result.json();\r\n\r\n    return body.results.map((joke) => ApiJokes.prepareData(joke));\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport JokeList from '../joke-list';\r\nimport SavedJokes from '../saved-jokes';\r\nimport Loader from '../loader';\r\nimport API from '../../service';\r\nimport './jokes.scss';\r\n\r\nconst smiles = [\r\n  { vote: 0, class: 'em-face_with_raised_eyebrow', color: 'rgb(0, 0, 0' },\r\n  { vote: 1, class: 'em-full_moon_with_face', color: 'rgb(0, 46, 0)' },\r\n  { vote: 5, class: 'em-face_with_hand_over_mouth', color: 'rgb(0, 92, 0)' },\r\n  { vote: 10, class: 'em-laughing', color: 'rgb(0, 148, 0)' },\r\n  { vote: 15, class: 'em-joy', color: 'rgb(0, 192, 0)' },\r\n  { vote: 20, class: 'em-rolling_on_the_floor_laughing', color: 'rgb(0, 255, 0)' },\r\n  { vote: -1, class: 'em-disappointed', color: 'rgb(46, 0, 0)' },\r\n  { vote: -5, class: 'em-angry', color: 'rgb(92, 0, 0)' },\r\n  { vote: -10, class: 'em-triumph', color: 'rgb(148, 0, 0)' },\r\n  { vote: -15, class: 'em-rage', color: 'rgb(192, 0, 0)' },\r\n  { vote: -20, class: 'em-face_with_symbols_on_mouth', color: 'rgb(255, 0, 0)' },\r\n];\r\n\r\nexport default class Jokes extends Component {\r\n  static changeCurrentSmile(rating) {\r\n    const idx = smiles.findIndex((smile) => smile.vote === rating);\r\n\r\n    if (idx === -1) {\r\n      return undefined;\r\n    }\r\n\r\n    return smiles[idx].class;\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jokes: [],\r\n      loading: true,\r\n    };\r\n    this._className = 'jokes';\r\n    this.api = new API();\r\n\r\n    this.increaseRaiting = this.increaseRaiting.bind(this);\r\n    this.decreaseRaiting = this.decreaseRaiting.bind(this);\r\n    this.saveJoke = this.saveJoke.bind(this);\r\n    //\r\n    this.refresh = this.refresh.bind(this);\r\n    this.sort = this.sort.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { getFunctions } = this.props;\r\n    // получаем шутки с сервера\r\n    this.api.get()\r\n      .then((result) => this.setJokes(result));\r\n    // передаём функции sort и refresh в родительский компонент\r\n    getFunctions(this.refresh, this.sort);\r\n  }\r\n\r\n  getIndex(currentID) {\r\n    const { jokes } = this.state;\r\n    return jokes.findIndex((joke) => joke.id === currentID);\r\n  }\r\n\r\n  // заполняем состояние компонента данными с сервера\r\n  setJokes(data) {\r\n    this.setState(() => ({ jokes: data, loading: false }));\r\n  }\r\n\r\n  getSavedJokes() {\r\n    const { jokes } = this.state;\r\n    return jokes.filter((joke) => joke.isSaved);\r\n  }\r\n\r\n  saveJoke(id) {\r\n    const idx = this.getIndex(id);\r\n    const { jokes } = this.state;\r\n    const element = { ...jokes[idx], isSaved: !jokes[idx].isSaved };\r\n\r\n    this.insert(element, idx);\r\n  }\r\n\r\n  refresh() {\r\n    // обнуляем state шуток\r\n    this.setState(() => ({ jokes: [], loading: true }));\r\n    // получаем новые шутки\r\n    this.api.get()\r\n      .then((body) => this.setJokes(body));\r\n  }\r\n\r\n  sort() {\r\n    const { jokes } = this.state;\r\n    const sortJokes = [...jokes].sort((a, b) => b.raiting - a.raiting);\r\n\r\n    this.setState(() => ({ jokes: sortJokes }));\r\n  }\r\n\r\n  // уменьшить рейтинг\r\n  decreaseRaiting(id) {\r\n    const idx = this.getIndex(id);\r\n    const { jokes } = this.state;\r\n    const updatedRating = jokes[idx].raiting - 1;\r\n\r\n    this.updateRating(idx, updatedRating);\r\n  }\r\n\r\n  // увеличить рейтинг\r\n  increaseRaiting(id) {\r\n    const idx = this.getIndex(id);\r\n    const { jokes } = this.state;\r\n    const updatedRating = jokes[idx].raiting + 1;\r\n\r\n    this.updateRating(idx, updatedRating);\r\n  }\r\n\r\n  insert(joke, index) {\r\n    this.setState(({ jokes }) => ({\r\n      jokes: [\r\n        ...jokes.slice(0, index),\r\n        joke,\r\n        ...jokes.slice(index + 1),\r\n      ],\r\n    }));\r\n  }\r\n\r\n  // изменить рейтинг\r\n  updateRating(index, rating) {\r\n    const smile = Jokes.changeCurrentSmile(rating);\r\n    const { jokes } = this.state;\r\n    const element = smile\r\n      ? { ...jokes[index], raiting: rating, currentSmile: smile }\r\n      : { ...jokes[index], raiting: rating };\r\n\r\n    this.insert(element, index);\r\n  }\r\n\r\n  // получаем какой из компонентов будет загружен на страницу\r\n  renderComponent() {\r\n    const { status } = this.props;\r\n    const { loading, jokes } = this.state;\r\n    const jokePage = status\r\n      ? <JokeList\r\n        jokes={jokes}\r\n        increaseRaiting={this.increaseRaiting}\r\n        decreaseRaiting={this.decreaseRaiting}\r\n        saveJoke={this.saveJoke}\r\n      />\r\n      : <SavedJokes\r\n        jokes={this.getSavedJokes()}\r\n      />;\r\n\r\n    return loading ? <Loader /> : jokePage;\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    const className = loading ? `${this._className} jokes--loading` : this._className;\r\n    const component = this.renderComponent();\r\n\r\n    return (\r\n      <div className={className}>\r\n        {component}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Jokes from './jokes';\r\n\r\nexport default Jokes;\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\n\r\nimport Menu from '../menu';\r\nimport Jokes from '../jokes';\r\n\r\nimport './app.scss';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showCurrent: true,\r\n    };\r\n\r\n    this.changeStatus = this.changeStatus.bind(this);\r\n    this.getRefFunctions = this.getRefFunctions.bind(this);\r\n  }\r\n\r\n  getRefFunctions(first, second) {\r\n    this.refresh = first;\r\n    this.sorting = second;\r\n  }\r\n\r\n  changeStatus() {\r\n    const { showCurrent } = this.state;\r\n\r\n    this.setState(() => ({ showCurrent: !showCurrent }));\r\n  }\r\n\r\n  render() {\r\n    const { showCurrent } = this.state;\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"content\">\r\n          <Menu\r\n            changeStatus={this.changeStatus}\r\n            currentStatus={showCurrent}\r\n            refresh={() => this.refresh()}\r\n            sorting={() => this.sorting()}\r\n          />\r\n          <Jokes\r\n            getFunctions={this.getRefFunctions}\r\n            status={showCurrent}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nimport './index.scss';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}